import java.io.*;
import java.lang.*;
import java.util.*;



public class GattacaInputParser {

	
	public static Interval1D generateIntervalsFromFile(String filename){
				
	    Interval1D[] intervals;
		
		System.out.println("Reading Inputs From File: " + filename);

		/* Read Text File From File */
	      try{
	            /* Open File   */                                                                                   
	                                                                                                               
	            FileInputStream fstream = new FileInputStream(filename);

	            /* Get The Object of DataInputStream   */                                                           
	            DataInputStream in = new DataInputStream(fstream);
	            BufferedReader br = new BufferedReader(new InputStreamReader(in));
	            int lengthOfDNA = 0;
	            
	            final int lengthOfDNA = Integer.parseInt(br.readLine().trim());

	            int v,w = 0;
	            
	            for(int i = 0; i < numMembers; i++){
	            	
	            	String[] splitstring = br.readLine().split("\\s+");
	            	
	            	final String name = splitstring[0].trim();
	            	
	            	final int accussations = Integer.parseInt(splitstring[1].trim());
	            	String accusedName;
	            	
	            	for(int j = 0; j < accussations; j++){
	            		accusedName = br.readLine().trim();

	            	}
	            }
	                                                                                                   
	            in.close();
   
	      }
	      
	      catch(Exception e){//Catch exception if any                                                           \
              
	            System.err.println("Error: " + e.getMessage());

	        }
		
	    System.out.println("HashMap contains "+ map.size() +" key value pairs");  
	    System.out.println("Printing Graph...");        
       
        StdOut.println(G);
        
		return G;
	}
	
	
	
	public static void main(String[] args) {
				
		AdjMatrixGraph G = null;
		
		String filename = "input.txt";
		Map<String,Integer> map = new HashMap<String,Integer>();
		
		System.out.println("Reading Inputs From File: " + filename);

		/* Read Text File From File */
	      try{
	            /* Open File   */                                                                                   
	                                                                                                               
	            FileInputStream fstream = new FileInputStream(filename);

	            /* Get The Object of DataInputStream   */                                                           
	                                                                                                               
	            DataInputStream in = new DataInputStream(fstream);
	            BufferedReader br = new BufferedReader(new InputStreamReader(in));
	            int memberNumber = 0;
	            
	            final int numMembers = Integer.parseInt(br.readLine().trim());
	            G = new AdjMatrixGraph(numMembers);
	            
	            int v,w = 0;
	            
	            for(int i = 0; i < numMembers; i++){
	            	
	            	String[] splitstring = br.readLine().split("\\s+");
	            	
	            	final String name = splitstring[0].trim();
	            	
	            	if(!map.containsKey(name)){
	            		map.put(name, new Integer(memberNumber));
	            		memberNumber++;
	            	}
	            	final int accussations = Integer.parseInt(splitstring[1].trim());
	            	String accusedName;
	            	
	            	for(int j = 0; j < accussations; j++){
	            		accusedName = br.readLine().trim();
	            		if(!map.containsKey(accusedName)){
		            		map.put(accusedName, new Integer(memberNumber));
		            		memberNumber++;
		            	}
	            		v = map.get(name);
	            		w = map.get(accusedName);
	            		
	            		G.addEdge(v,w);
	            		G.addEdge(w,v);	            		
	            	}
	            }
	                                                                                                   
	            in.close();
   
	      }
	      
	      catch(Exception e){//Catch exception if any                                                           \
              
	            System.err.println("Error: " + e.getMessage());

	        }
		
	    System.out.println("HashMap contains "+ map.size() +" key value pairs");  
	    System.out.println("Printing Graph...");        
       
        StdOut.println(G);
         
	}// end main method
	
	
}

