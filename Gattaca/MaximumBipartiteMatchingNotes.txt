
http://math.mit.edu/~goemans/18433S07/matching-notes.pdf

A graph G = (V,E) is bipartite if the vertex set V can be partitioned
into two sets A and B (the bipartition) such that no edge in E has both
endpoints in the same set of the bipartition. A M subset E is a collection
of edges such that every vertex of V is incident to at most one edge of M.

Def: A matching is perfect if no vertex is exposed; in other words, a matching
is perfect if its to size(A) = size(B).

Maximum cardinality matching problem: Find a matching M of maximum size.

Def: A vertex cover is a set C of vertices such that all edges e of E are 
incident to at least one vertex of C.

Theorem 1 (Konig): For any bipartite graph, the maximum size of a matching is 
equal to the minimum size of a vertex cover. 



Introduction to Algorithms (Second Edition) 
Author: Thomas H. Cormen et. al

Chapter 26.3 Maximum Bipartite Matching

Given an undirected graph G = (V,E), a matching is a subset of edges 
M subset E, such that for all  vertices v in V, at most one edge of M is 
incident on v. 

Def: We say that a vertex v in V is matched by matching M if some edge in 
M is incident o v; otherwise, v is unmatched. 

Def: A maximum matching is a matching of maximum cardinality, that is, a 
matching M such that for any matching M', we have size(M) >= size(M').

- We can use the Ford-Fulkerson method to find a maximum matching in an 
undirected bipartite graph  G = (V,E) in time polynomial. 

Def: An augmenting path with respect to M is an alternating path in which
the first and last vertices are exposed.


CMSC 451: Maximum Bipartite Matching
http://www.cs.umd.edu/class/fall2009/cmsc451/lectures/Lec16-matching.pdf

Key Idea: Reduce Bipartite Matching to Net Flow

Using Net Flwo To Solve Bipartite Matching

To Recap:
1. Given bipartite graph G = (AUB,E), direct the edges from A to B
2. Add new vertices s and t.
3. Add an edge from s to every vertex in A.
4. Add an edge from every vertex in B to t.
5. Make all the capacities 1.
6. Solve the maximum network flow problem on this new graph G'.

THE EDGES USED IN THE MAXIMUM NETWORK FLOW WILL CORRESPOND TO THE 
LARGEST POSSIBLE MATCHING!

Summary

Key Point: Ford-Fulkerson can find a maximum matching in a bipartite graph
in O(mn) time.

Key Point: We do this by reducing the problem of maximum bipartite matching
to network flow.


Chapter 7 Network Flow Jon Kleinberg, Eva Tardos
http://www.cs.princeton.edu/~wayne/kleinberg-tardos/07maxflow-applications-2x2.pdf
http://www.cs.princeton.edu/~wayne/kleinberg-tardos/07maxflow-2x2.pdf

Algorithm Source Code: http://algs4.cs.princeton.edu/code/
